Digital Signal Processing Techniques in Python

Charles E Fortune, Skyler J. Hugo, Trevor Van Engelhoven

Digital signal processing written in Pure Python designed to generate and foremost manipulate waveforms for audio design purposes. The modern music industry revolves heavily around digital audio-mixing, and this project ventures into this realm by constructing what is colloquially known as an effects processor comparable to those seen in use across the music industry. Ideally, this system could be expanded upon given proper time and funding to increase overall fidelity quality and effect variety (in the form of improved hardware and code optimisation)
Primary coding methods can be broken down into three immediate segments of design: function generation, effect processing in a Python environment, further output as audible noise utilising Raspberry Pi interface.
The results are promising, with outcomes extending well beyond initial forecasted success projections. Working Python code (though not optimised) wrapped through a Raspberry Pi output-system produces desired effect-processing with little to no audio latency and justifiable loss in overall audio fidelity.
This project serves as a stable proof-of-concept for the further development of Python as an audio effects-processor. The research team has concluded that further investment in project-development will likely yield further positive results.

Code is available at https://github.com/ASU-CompMethodsPhysics-PHY494/final-digital-signal-processor
